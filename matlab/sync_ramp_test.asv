%% 清理
close all;
%% 加载数据、参数
load '../data/dataSim_200kHz_7500pf_1t3r_static.mat'

ys=log2array(logsout,'dataSim');

%% 提取两路信号
ysLo=real(ys);%ys local
ysTr=imag(ys);%ys triger

%% 显示示例帧，计算参数
iSam=3;
ts=0:1/fS:1/fS*(size(ysLo,2)-1);
ysLoSam=ysLo(iSam,:);
ysTrSam=ysTr(iSam,:);
trThres=(max(ysTrSam)+min(ysTrSam))/2;%triger threshold
trThres=(mean(ysTrSam(ysTrSam>trThres))+mean(ysTrSam(ysTrSam<trThres)))/2;
figure;
plot(ts,ysLoSam);
hold on
plot(ts,ysTrSam);
plot([ts(1),ts(end)],[trThres,trThres]);


%% 检验sync_ramp函数
tFramp=sync_ramp(ysTrSam,fS,fTr,tPul,3,0,trThres)%time Ramp
plot(tFramp,
hold off

%% 同步斜坡信号起始时间函数，返回所有斜坡信号起始时间点
% tFramp: 第一个斜坡开始时间，精确到采样时间之下，以第一个采样点为参考时间0
% ysTr: 一帧triger信号
% fS: 采样率
% fTr: 帧率
% tPul: 脉冲/比特宽度
% nPul: 脉冲/比特总数
% trEdge: 触发沿：1上升沿 0下降沿
% trThres: 触发电平
function tFramp=sync_ramp(ysTr, fS, fTr, tPul, nPul, trEdge, trThres)
%% 准备参数
lRamp=fS/fTr;%length ramp
lPul=fS*tPul;%length pulse

if(mod(size(ysTr,2),lRamp)~=0)
    error('The length of frame is not integer multiple of the length of ramp .');
end

%% 分析第一个完整斜坡同步信号
%第一个完整斜坡同步信号触发沿位于1:lRamp,为了容错，扩大范围到1:lRamp+lPul*nPul
isFramp=1:lRamp+lPul*nPul;%indexs first ramp
ysTrFf=ysTr(isFramp);%ys triger first ramp
iTrF=[];
if trEdge==0
    iTrF=find(ysTrFf(2:end)<trThres & ysTrFf(1:end-1)>trThres)+1;%index triger first
else
    iTrF=find(ysTrFf(2:end)>trThres & ysTrFf(1:end-1)<trThres)+1;
end
iTrF([false iTrF(2:end)-iTrF(1:end-1)<=lPul*nPul])=[];%要求脉冲和比特总时长小于斜坡周期的一半
if isempty(iTrF)
    tFramp=nan;
    return
else
    iTrF=iTrF(end);%选取最后一个触发信号
end

%% 分析上升沿的精确时间
tFramp=interp1([ysTr(iTrF-1),ysTr(iTrF)],([iTrF-1,iTrF]-1)/fS,trThres);
end